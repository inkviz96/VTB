version: '3.8'
services:
  web:
    container_name: vtb_web
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "${FAST_API_PORT}:8000"
    restart: on-failure
    command: bash -c "alembic revision --autogenerate -m 'create tables'&&alembic upgrade head&&uvicorn main:app --host 0.0.0.0 --port 8000"
    volumes:
      - .:/app
    networks:
      - main-vtb
    depends_on:
      - db
  db:
    container_name: vtb_postgresql
    image: postgres:11
    env_file: .env
    volumes:
      - ${POSTGRES_VOLUME}:/var/lib/postgresql/data
    networks:
      - main-vtb
    restart: always
  rabbitmq:
    container_name: vtb_rabbitmq
    image: rabbitmq:3.8.11
    env_file: .env
    restart: on-failure
    ports:
      - "${RABBITMQ_DEFAULT_PORT}:5672"
      - "15672:15672"
    networks:
      - main-vtb
  dramatiq:
    container_name: vtb_dramatiq
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    volumes:
      - .:/app
    restart: on-failure
    env_file:
      - .env
    command: bash -c "dramatiq scanner:broker"
    networks:
      - main-chia
  scheduler:
    container_name: vtb_scheduler
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - dramatiq
    volumes:
      - .:/app
    restart: on-failure
    env_file:
      - .env
    command: python scanner.py
    networks:
      - main-vtb

networks:
  main-vtb:
    driver: bridge